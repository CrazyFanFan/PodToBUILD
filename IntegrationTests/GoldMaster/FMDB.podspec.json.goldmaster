load('//:build_extensions.bzl', 'pch_with_name_hint')
FMDB_source_headers = [

]
FMDB_extra_headers = glob(
  [
    "bazel_support/Headers/Public/**/*.h"
  ],
  exclude_directories = 1
  )
FMDB_headers = FMDB_source_headers + FMDB_extra_headers
objc_library(
  name = "FMDB",
  srcs = [

  ],
  hdrs = FMDB_headers,
  pch = pch_with_name_hint(
    "FMDB",
    [

    ]
    ),
  includes = [
    "bazel_support/Headers/Public/",
    "bazel_support/Headers/Public/FMDB/"
  ],
  deps = [
    ":FMDB_standard",
    ":FMDB_FTS",
    ":FMDB_standalone",
    ":FMDB_SQLCipher"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
FMDB_standard_source_headers = glob(
  [
    "src/fmdb/FM*.h"
  ],
  exclude_directories = 1
  )
FMDB_standard_extra_headers = glob(
  [
    "bazel_support/Headers/Public/**/*.h"
  ],
  exclude_directories = 1
  )
FMDB_standard_headers = FMDB_standard_source_headers + FMDB_standard_extra_headers
objc_library(
  name = "FMDB_standard",
  srcs = glob(
    [
      "src/fmdb/FM*.m"
    ],
    exclude = [
      "src/extra/fts3/*.m",
      "src/fmdb.m"
    ],
    exclude_directories = 1
    ),
  hdrs = FMDB_standard_headers,
  pch = pch_with_name_hint(
    "FMDB",
    [
      "src/**/*.pch"
    ]
    ),
  includes = [
    "bazel_support/Headers/Public/",
    "bazel_support/Headers/Public/FMDB/"
  ],
  sdk_dylibs = [
    "sqlite3"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
FMDB_FTS_source_headers = glob(
  [
    "src/extra/fts3/*.h"
  ],
  exclude_directories = 1
  )
FMDB_FTS_extra_headers = glob(
  [
    "bazel_support/Headers/Public/**/*.h"
  ],
  exclude_directories = 1
  )
FMDB_FTS_headers = FMDB_FTS_source_headers + FMDB_FTS_extra_headers
objc_library(
  name = "FMDB_FTS",
  srcs = glob(
    [
      "src/extra/fts3/*.m"
    ],
    exclude_directories = 1
    ),
  hdrs = FMDB_FTS_headers,
  pch = pch_with_name_hint(
    "FMDB",
    [
      "src/**/*.pch"
    ]
    ),
  includes = [
    "bazel_support/Headers/Public/",
    "bazel_support/Headers/Public/FMDB/"
  ],
  deps = [
    ":FMDB_standard"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
FMDB_standalone_source_headers = [

]
FMDB_standalone_extra_headers = glob(
  [
    "bazel_support/Headers/Public/**/*.h"
  ],
  exclude_directories = 1
  )
FMDB_standalone_headers = FMDB_standalone_source_headers + FMDB_standalone_extra_headers
objc_library(
  name = "FMDB_standalone",
  srcs = [

  ],
  hdrs = FMDB_standalone_headers,
  pch = pch_with_name_hint(
    "FMDB",
    [

    ]
    ),
  includes = [
    "bazel_support/Headers/Public/",
    "bazel_support/Headers/Public/FMDB/"
  ],
  copts = [
    "-DFMDB_SQLITE_STANDALONE"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
FMDB_SQLCipher_source_headers = glob(
  [
    "src/fmdb/FM*.h"
  ],
  exclude_directories = 1
  )
FMDB_SQLCipher_extra_headers = glob(
  [
    "bazel_support/Headers/Public/**/*.h"
  ],
  exclude_directories = 1
  )
FMDB_SQLCipher_headers = FMDB_SQLCipher_source_headers + FMDB_SQLCipher_extra_headers
objc_library(
  name = "FMDB_SQLCipher",
  srcs = glob(
    [
      "src/fmdb/FM*.m"
    ],
    exclude = [
      "src/fmdb.m"
    ],
    exclude_directories = 1
    ),
  hdrs = FMDB_SQLCipher_headers,
  pch = pch_with_name_hint(
    "FMDB",
    [
      "src/**/*.pch"
    ]
    ),
  includes = [
    "bazel_support/Headers/Public/",
    "bazel_support/Headers/Public/FMDB/"
  ],
  deps = [
    "@SQLCipher//:SQLCipher"
  ],
  copts = [
    "-DSQLITE_HAS_CODEC",
    "-DHAVE_USLEEP=1"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
