load('//:pod_support_buildable/extensions.bzl', 'pch_with_name_hint')
load('//:pod_support_buildable/extensions.bzl', 'acknowledged_target')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://bazel.build/versions/master/docs/bazel-user-manual.html
native.config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
  )
config_setting(
  name = "iosCase",
  values = {
    "cpu": "powerpc1"
  }
  )
config_setting(
  name = "tvosCase",
  values = {
    "cpu": "powerpc3"
  }
  )
objc_library(
  name = "FBSDKCoreKit",
  enable_modules = 1,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "FBSDKCoreKit/FBSDKCoreKit/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/*.mm",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.mm"
        ],
        exclude = [
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKDeviceButton.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKDeviceViewControllerBase.m"
        ],
        exclude_directories = 1
        ),
      ":tvosCase": glob(
        [
          "FBSDKCoreKit/FBSDKCoreKit/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/*.mm",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.mm"
        ],
        exclude = [
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKAppLinkResolver.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKAppLinkUtility.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKGraphErrorRecoveryProcessor.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKProfile.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKProfilePictureView.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKAudioResourceLoader.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKContainerViewController.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKMonotonicTime.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKSystemAccountStoreAdapter.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKTriStateBOOL.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKCloseIcon.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKColor.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKMaleSilhouetteIcon.m"
        ],
        exclude_directories = 1
        )
    }
    ),
  non_arc_srcs = select(
    {
      "//conditions:default": glob(
        [
          "FBSDKCoreKit/FBSDKCoreKit/**/*.m"
        ],
        exclude = [
          "FBSDKCoreKit/FBSDKCoreKit/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/*.mm",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKDeviceButton.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKDeviceViewControllerBase.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.mm"
        ],
        exclude_directories = 1
        ),
      ":tvosCase": glob(
        [
          "FBSDKCoreKit/FBSDKCoreKit/**/*.m"
        ],
        exclude = [
          "FBSDKCoreKit/FBSDKCoreKit/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/*.mm",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKAppLinkResolver.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKAppLinkUtility.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKGraphErrorRecoveryProcessor.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKProfile.m",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKProfilePictureView.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/**/*.mm",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKAudioResourceLoader.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKContainerViewController.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKMonotonicTime.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKSystemAccountStoreAdapter.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKTriStateBOOL.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKCloseIcon.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKColor.m",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKMaleSilhouetteIcon.m"
        ],
        exclude_directories = 1
        )
    }
    ),
  hdrs = select(
    {
      "//conditions:default": glob(
        [
          "FBSDKCoreKit/FBSDKCoreKit/**/*.h",
          "pod_support/Headers/Public/**/*.h"
        ],
        exclude = [
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKDeviceButton.h",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKDeviceViewControllerBase.h"
        ],
        exclude_directories = 1
        ),
      ":tvosCase": glob(
        [
          "FBSDKCoreKit/FBSDKCoreKit/**/*.h",
          "pod_support/Headers/Public/**/*.h"
        ],
        exclude = [
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKAppLinkResolver.h",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKAppLinkUtility.h",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKGraphErrorRecoveryProcessor.h",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKMutableCopying.h",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKProfile.h",
          "FBSDKCoreKit/FBSDKCoreKit/FBSDKProfilePictureView.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKAudioResourceLoader.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKContainerViewController.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKMonotonicTime.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKProfile+Internal.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKSystemAccountStoreAdapter.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/FBSDKTriStateBOOL.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKCloseIcon.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKColor.h",
          "FBSDKCoreKit/FBSDKCoreKit/Internal/UI/FBSDKMaleSilhouetteIcon.h"
        ],
        exclude_directories = 1
        )
    }
    ),
  pch = pch_with_name_hint(
    "FBSDKCoreKit",
    [
      "FBSDKCoreKit/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/FBSDKCoreKit/"
  ],
  weak_sdk_frameworks = select(
    {
      "//conditions:default": [
        "Accounts",
        "CoreLocation",
        "Social",
        "Security",
        "QuartzCore",
        "CoreGraphics",
        "UIKit",
        "Foundation",
        "AudioToolbox"
      ],
      ":tvosCase": [
        "CoreLocation",
        "Security",
        "QuartzCore",
        "CoreGraphics",
        "UIKit",
        "Foundation",
        "AudioToolbox"
      ]
    }
    ),
  deps = [
    ":FBSDKCoreKit_Bundle_FacebookSDKStrings"
  ] + select(
    {
      "//conditions:default": [
        "@Bolts//:Bolts"
      ]
    }
    ),
  copts = [

  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ),
  bundles = [
    ":FBSDKCoreKit_Bundle_FacebookSDKStrings"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "FBSDKCoreKit_acknowledgement",
  deps = [
    "@Bolts//:Bolts_acknowledgement",
    ":FBSDKCoreKit_Bundle_FacebookSDKStrings_acknowledgement"
  ]
  )
objc_bundle(
  name = "FBSDKCoreKit_Bundle_FacebookSDKStrings",
  bundle_imports = glob(
    [
      "FacebookSDKStrings.bundle/**"
    ],
    exclude_directories = 1
    )
  )
acknowledged_target(
  name = "FBSDKCoreKit_Bundle_FacebookSDKStrings_acknowledgement",
  deps = [

  ]
  )
