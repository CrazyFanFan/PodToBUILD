load('//:pod_support_buildable/extensions.bzl', 'pch_with_name_hint')
load('//:pod_support_buildable/extensions.bzl', 'acknowledged_target')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://bazel.build/versions/master/docs/bazel-user-manual.html
native.config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
  )
objc_library(
  name = "FBSDKLoginKit",
  enable_modules = 1,
  srcs = glob(
    [
      "FBSDKLoginKit/FBSDKLoginKit/**/*.m"
    ],
    exclude_directories = 1
    ),
  hdrs = glob(
    [
      "FBSDKLoginKit/FBSDKLoginKit/**/*.h",
      "pod_support/Headers/Public/**/*.h"
    ],
    exclude_directories = 1
    ),
  pch = pch_with_name_hint(
    "FBSDKLoginKit",
    [
      "FBSDKLoginKit/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/FBSDKLoginKit/"
  ],
  weak_sdk_frameworks = [
    "Accounts",
    "CoreLocation",
    "Social",
    "Security",
    "QuartzCore",
    "CoreGraphics",
    "UIKit",
    "Foundation",
    "AudioToolbox"
  ],
  deps = [
    "@FBSDKCoreKit//:FBSDKCoreKit"
  ],
  copts = [
    "-Wno-non-modular-include-in-framework-module -Wno-error=noon-modular-include-in-framework-module"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
    ),
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "FBSDKLoginKit_acknowledgement",
  deps = [
    "@FBSDKCoreKit//:FBSDKCoreKit_acknowledgement"
  ]
  )
