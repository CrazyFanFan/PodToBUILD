load('//:pod_support_buildable/extensions.bzl', 'pch_with_name_hint')
load('//:pod_support_buildable/extensions.bzl', 'acknowledged_target')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://bazel.build/versions/master/docs/bazel-user-manual.html
native.config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
  )
objc_library(
  name = "AsyncDisplayKit",
  enable_modules = 1,
  hdrs = glob(
    [
      "pod_support/Headers/Public/**/*.h"
    ],
    exclude_directories = 1
    ),
  pch = pch_with_name_hint(
    "AsyncDisplayKit",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/AsyncDisplayKit/"
  ],
  weak_sdk_frameworks = [
    "Photos",
    "MapKit",
    "AssetsLibrary"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":AsyncDisplayKit_PINRemoteImage"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
    ),
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AsyncDisplayKit_acknowledgement",
  deps = [
    ":AsyncDisplayKit_PINRemoteImage_acknowledgement"
  ]
  )
objc_library(
  name = "AsyncDisplayKit_Core",
  enable_modules = 1,
  srcs = glob(
    [
      "Base/*.m",
      "Source/**/*.m",
      "Source/**/*.mm"
    ],
    exclude_directories = 1
    ),
  hdrs = glob(
    [
      "Base/*.h",
      "Source/**/*.h",
      "Source/TextKit/*.h",
      "pod_support/Headers/Public/**/*.h"
    ],
    exclude_directories = 1
    ),
  pch = pch_with_name_hint(
    "AsyncDisplayKit",
    [
      "Source/**/*.pch",
      "Base/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/AsyncDisplayKit/"
  ],
  weak_sdk_frameworks = [
    "Photos",
    "MapKit",
    "AssetsLibrary"
  ],
  sdk_dylibs = [
    "c++"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++",
    ""
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
    ),
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AsyncDisplayKit_Core_acknowledgement",
  deps = [

  ]
  )
objc_library(
  name = "AsyncDisplayKit_PINRemoteImage",
  enable_modules = 1,
  hdrs = glob(
    [
      "pod_support/Headers/Public/**/*.h"
    ],
    exclude_directories = 1
    ),
  pch = pch_with_name_hint(
    "AsyncDisplayKit",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/AsyncDisplayKit/"
  ],
  weak_sdk_frameworks = [
    "Photos",
    "MapKit",
    "AssetsLibrary"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    "@PINRemoteImage//:PINRemoteImage_PINCache",
    ":AsyncDisplayKit_Core",
    "@PINRemoteImage//:PINRemoteImage_iOS"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
    ),
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AsyncDisplayKit_PINRemoteImage_acknowledgement",
  deps = [
    "@PINRemoteImage//:PINRemoteImage_PINCache_acknowledgement",
    "@PINRemoteImage//:PINRemoteImage_iOS_acknowledgement",
    ":AsyncDisplayKit_Core_acknowledgement"
  ]
  )
objc_library(
  name = "AsyncDisplayKit_IGListKit",
  enable_modules = 1,
  hdrs = glob(
    [
      "pod_support/Headers/Public/**/*.h"
    ],
    exclude_directories = 1
    ),
  pch = pch_with_name_hint(
    "AsyncDisplayKit",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/AsyncDisplayKit/"
  ],
  weak_sdk_frameworks = [
    "Photos",
    "MapKit",
    "AssetsLibrary"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":AsyncDisplayKit_Core",
    "@IGListKit//:IGListKit"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
    ),
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AsyncDisplayKit_IGListKit_acknowledgement",
  deps = [
    "@IGListKit//:IGListKit_acknowledgement",
    ":AsyncDisplayKit_Core_acknowledgement"
  ]
  )
objc_library(
  name = "AsyncDisplayKit_Yoga",
  enable_modules = 1,
  hdrs = glob(
    [
      "pod_support/Headers/Public/**/*.h"
    ],
    exclude_directories = 1
    ),
  pch = pch_with_name_hint(
    "AsyncDisplayKit",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "pod_support/Headers/Public/AsyncDisplayKit/"
  ],
  weak_sdk_frameworks = [
    "Photos",
    "MapKit",
    "AssetsLibrary"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":AsyncDisplayKit_Core",
    "@Yoga//:Yoga"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++",
    "-DYOGA=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
    ),
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AsyncDisplayKit_Yoga_acknowledgement",
  deps = [
    "@Yoga//:Yoga_acknowledgement",
    ":AsyncDisplayKit_Core_acknowledgement"
  ]
  )
